

# This file was *autogenerated* from the file s2dh.sage
from sage.all_cmdline import *   # import sage library

_sage_const_43 = Integer(43); _sage_const_26 = Integer(26); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_5 = Integer(5); _sage_const_84 = Integer(84)
from sage.all import *

a = _sage_const_43 
b = _sage_const_26 
p = _sage_const_2 **a*_sage_const_3 **b - _sage_const_1 
assert p in Primes()

K = GF(p**_sage_const_2 , modulus=x**_sage_const_2 +_sage_const_1 , names=('i',)); (i,) = K._first_ngens(1)
E = EllipticCurve(K, [_sage_const_1 , _sage_const_0 ])

Pa = E(_sage_const_0 )
while (_sage_const_2 **(a-_sage_const_1 ))*Pa == _sage_const_0 :
    Pa = _sage_const_3 **b * E.random_point()
print(Pa)

Qa = Pa
while Pa.weil_pairing(Qa, _sage_const_2 **a)**(_sage_const_2 **(a-_sage_const_1 )) == _sage_const_1 :
    Qa = _sage_const_3 **b * E.random_point()
print(Qa)

Pb = E(_sage_const_0 )
while (_sage_const_3 **(b-_sage_const_1 ))*Pb == _sage_const_0 :
    Pb = _sage_const_2 **a * E.random_point()
print(Pb)

Qb = Pb
while Pb.weil_pairing(Qb, _sage_const_3 **b)**(_sage_const_3 **(b-_sage_const_1 )) == _sage_const_1 :
    Qb = _sage_const_2 **a * E.random_point()
print(Qb)

Sa = randint(_sage_const_0 , _sage_const_2 **a-_sage_const_1 )
Ta = randint(_sage_const_0 , _sage_const_2 **a-_sage_const_1 )
R = Sa*Pa + Ta * Qa
phi = E.isogeny(R)
Ea, phiPb, phiQb = phi.codomain(), phi(Pb), phi(Qb)
print(Ea, phiPb, phiQb)

Sb = randint(_sage_const_0 , _sage_const_3 **b-_sage_const_1 )
Tb = randint(_sage_const_0 , _sage_const_3 **b-_sage_const_1 )
R = Sb * Pb + Tb * Qb
psi = E.isogeny(R)
Eb, psiPa, psiQa = psi.codomain(), psi(Pa), psi(Qa)
print(Eb, psiPa, psiQa)

J = Eb.isogeny(Sa*psiPa + Ta*psiQa, algorithm='factored').codomain().j_invariant()
print(J)

flag = open("flag.txt","r").read()
assert flag[:_sage_const_5 ] == "hctf3" and flag[-_sage_const_1 ] == "}"
flag = flag[_sage_const_5 :-_sage_const_1 ]
print(int.from_bytes(flag.encode()) ^ ((int(J[_sage_const_1 ]) << _sage_const_84 ) + int(J[_sage_const_0 ])))

