

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_43 = Integer(43); _sage_const_26 = Integer(26); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_20816113353953844596827139 = Integer(20816113353953844596827139); _sage_const_16418101434179547435831830 = Integer(16418101434179547435831830); _sage_const_9782287231195084940947894 = Integer(9782287231195084940947894); _sage_const_8305288838066432045414923 = Integer(8305288838066432045414923); _sage_const_7582970089792232978539532 = Integer(7582970089792232978539532); _sage_const_6411668474015872447958400 = Integer(6411668474015872447958400); _sage_const_15459880436272725660545115 = Integer(15459880436272725660545115); _sage_const_7977012527121440514383975 = Integer(7977012527121440514383975); _sage_const_13022786448801065009926908 = Integer(13022786448801065009926908); _sage_const_21396754486749480260181021 = Integer(21396754486749480260181021); _sage_const_5027869541156315740937282 = Integer(5027869541156315740937282); _sage_const_8428382255806278677381816 = Integer(8428382255806278677381816); _sage_const_10341548384598782389107676 = Integer(10341548384598782389107676); _sage_const_12525908271709247355078632 = Integer(12525908271709247355078632); _sage_const_6555843755802979256565190 = Integer(6555843755802979256565190); _sage_const_11595932163398809254591141 = Integer(11595932163398809254591141); _sage_const_4926878008530427712778566 = Integer(4926878008530427712778566); _sage_const_8053083788709808436490360 = Integer(8053083788709808436490360); _sage_const_18771446501040649196825847 = Integer(18771446501040649196825847); _sage_const_16306438728950797793375410 = Integer(16306438728950797793375410); _sage_const_2535790352220803985875373 = Integer(2535790352220803985875373); _sage_const_17699033710915047849396921 = Integer(17699033710915047849396921); _sage_const_2413558249712558899689063 = Integer(2413558249712558899689063); _sage_const_5157954648088691506046995 = Integer(5157954648088691506046995); _sage_const_16568070039544280994803013 = Integer(16568070039544280994803013); _sage_const_21423138055383385576701886 = Integer(21423138055383385576701886); _sage_const_5040448698696125071219900 = Integer(5040448698696125071219900); _sage_const_6672798507142407841550817 = Integer(6672798507142407841550817); _sage_const_18866222948911535725014127 = Integer(18866222948911535725014127); _sage_const_21372353382532165741892023 = Integer(21372353382532165741892023); _sage_const_14780329017962693588095579 = Integer(14780329017962693588095579); _sage_const_4731720677310255642021851 = Integer(4731720677310255642021851); _sage_const_3413055427164626562463192 = Integer(3413055427164626562463192); _sage_const_5176875496413372729075617 = Integer(5176875496413372729075617); _sage_const_17919859745180152815219510 = Integer(17919859745180152815219510); _sage_const_18120119720358642060676362 = Integer(18120119720358642060676362); _sage_const_18433160961475396600407402 = Integer(18433160961475396600407402); _sage_const_22312166252239187097449810 = Integer(22312166252239187097449810); _sage_const_10433258275941991434154560 = Integer(10433258275941991434154560); _sage_const_9029292514862239326241711 = Integer(9029292514862239326241711); _sage_const_243706092945144760206191226817331300960683091878992 = Integer(243706092945144760206191226817331300960683091878992); _sage_const_84 = Integer(84)
from Crypto.Util.number import long_to_bytes
from public_values_aux import *

load('castryck_decru_shortcut.sage')

a = _sage_const_43 
b = _sage_const_26 
p = _sage_const_2 **a*_sage_const_3 **b - _sage_const_1 
assert p in Primes()

K = GF(p**_sage_const_2 , modulus=x**_sage_const_2 +_sage_const_1 , names=('i',)); (i,) = K._first_ngens(1)
PR = PolynomialRing(K, names=('x',)); (x,) = PR._first_ngens(1)
E = EllipticCurve(K, [_sage_const_1 , _sage_const_0 ])
E.set_order((p+_sage_const_1 )**_sage_const_2 )

Pa = E(_sage_const_20816113353953844596827139 *i + _sage_const_16418101434179547435831830 , _sage_const_9782287231195084940947894 *i + _sage_const_8305288838066432045414923 )
Pb = E(_sage_const_7582970089792232978539532 *i + _sage_const_6411668474015872447958400 , _sage_const_15459880436272725660545115 *i + _sage_const_7977012527121440514383975 )
Qa = E(_sage_const_13022786448801065009926908 *i + _sage_const_21396754486749480260181021 , _sage_const_5027869541156315740937282 *i + _sage_const_8428382255806278677381816 )
Qb = E(_sage_const_10341548384598782389107676 *i + _sage_const_12525908271709247355078632 , _sage_const_6555843755802979256565190 *i + _sage_const_11595932163398809254591141 )

Ea = EllipticCurve(K, [_sage_const_4926878008530427712778566 *i+_sage_const_8053083788709808436490360 , _sage_const_18771446501040649196825847 *i+_sage_const_16306438728950797793375410 ])
phiPb = Ea(_sage_const_2535790352220803985875373 *i + _sage_const_17699033710915047849396921 , _sage_const_2413558249712558899689063 *i + _sage_const_5157954648088691506046995 )
phiQb = Ea(_sage_const_16568070039544280994803013 *i + _sage_const_21423138055383385576701886 , _sage_const_5040448698696125071219900 *i + _sage_const_6672798507142407841550817 )

Eb = EllipticCurve(K, [_sage_const_18866222948911535725014127 *i+_sage_const_21372353382532165741892023 , _sage_const_14780329017962693588095579 *i+_sage_const_4731720677310255642021851 ])
psiPa = Eb(_sage_const_3413055427164626562463192 *i + _sage_const_5176875496413372729075617 , _sage_const_17919859745180152815219510 *i + _sage_const_18120119720358642060676362 )
psiQa = Eb(_sage_const_18433160961475396600407402 *i + _sage_const_22312166252239187097449810 , _sage_const_10433258275941991434154560 *i + _sage_const_9029292514862239326241711 )

### Recovery

phi = EllipticCurveIsogeny(E, x)
E1728 = phi.codomain()

for iota in E1728.automorphisms():
    P = E1728.random_point()
    if iota(iota(P)) == -P:
        two_i = phi.post_compose(iota).post_compose(phi.dual())
        break


num_cores = _sage_const_1 
P3 = Pb
Q3 = Qb
recovered = CastryckDecruAttack(E, Pa, Qa, Eb, psiPa, psiQa, two_i, num_cores=num_cores)

shared = Ea.isogeny(phiPb + recovered * phiQb, algorithm='factored').codomain().j_invariant()

c = _sage_const_243706092945144760206191226817331300960683091878992 
key = ((int(shared[_sage_const_1 ]) << _sage_const_84 ) + int(shared[_sage_const_0 ]))
flag = b"RCTF{" + long_to_bytes(c ^ key) + b"}"

assert flag == b"RCTF{SIDH_isBr0ken_in_2O22}"
print(flag)

